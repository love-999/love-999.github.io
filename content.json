{"meta":{"title":"久久玖❤️小屋","subtitle":"久久玖❤️小屋","description":"久久玖❤️小屋 —— 一个情侣博客，记录我们美好的爱情、记录生活中的点点滴滴！","author":"久久玖❤️小屋","url":""},"pages":[{"title":"about","date":"2022-03-22T18:23:00.000Z","updated":"2022-04-07T11:28:05.621Z","comments":false,"path":"about/index.html","permalink":"/about/index.html","excerpt":"","text":"[さくら荘のhojun] 与&nbsp; Mashiro&nbsp; （ 真（ま）白（しろ） ） 对话中... bot_ui_ini()","keywords":"关于"},{"title":"comment","date":"2022-03-22T18:23:00.000Z","updated":"2022-04-07T11:28:05.622Z","comments":true,"path":"comment/index.html","permalink":"/comment/index.html","excerpt":"","text":"念两句诗 叙别梦、扬州一觉。 【宋代】吴文英《夜游宫·人去西楼雁杳》","keywords":"留言板"},{"title":"LoveTimeline","date":"2022-03-22T18:23:30.000Z","updated":"2022-04-08T03:58:15.892Z","comments":false,"path":"LoveTimeline/index.html","permalink":"/LoveTimeline/index.html","excerpt":"","text":"久久玖❤️小屋 LoveTimeline 从青丝到白发 2020年 03月04日 第一次相遇 我们第一次相遇是在清晨睡眼朦胧中，从一句你多大开始，都还没想过我们后来会有那么多交集。 2020年 03月23日 正式确定恋爱关系 未来老公，什么时候把未来两个字去掉，我get到蕾宝的意思了","keywords":"爱情长跑线 • LoveTimeline"},{"title":"links","date":"2022-03-22T18:23:00.000Z","updated":"2022-04-07T11:28:05.622Z","comments":true,"path":"links/index.html","permalink":"/links/index.html","excerpt":"","text":"","keywords":"友人帐"},{"title":"Album","date":"2022-04-08T03:58:15.893Z","updated":"2022-04-08T03:58:15.893Z","comments":false,"path":"album/index.html","permalink":"/album/index.html","excerpt":"","text":"相册有待完善...... ❤️ 待补充 ❤️ 待补充 待补充 待补充 待补充 待补充 待补充 ☀️ 待补充 ☀️ 待补充 待补充 待补充 待补充 待补充 待补充","keywords":"相册 ● Album"},{"title":"rss","date":"2022-03-22T18:23:00.000Z","updated":"2022-04-07T11:28:05.622Z","comments":true,"path":"rss/index.html","permalink":"/rss/index.html","excerpt":"","text":""},{"title":"","date":"2022-04-08T03:58:15.891Z","updated":"2022-04-08T03:58:15.891Z","comments":true,"path":"100-things/index.html","permalink":"/100-things/index.html","excerpt":"","text":"久久玖❤️小屋 | 100件事 body {background:#ffffff;color:#ffffff} .frame {float:left;border:1px;border-style:solid;margin:1px} .box {width:246px;height:40px;background:rgba(255, 255, 255, 0.068)} .td1 {width:45px;height:45px;text-align:center;font-size:14pt;line-height:1em;color:#ffffff} .td2 {font-size:13pt;padding:4pt;line-height:1.25em} .td3 {text-align:right;} .canvas {margin:0 0 0 0;display: block} .copyright,.text {position:relative;text-align:center;bottom:20px;width:100%} .main {margin: 4% 6% 2% 6%} 在一起要做的100件事 山有云烟，鸟有碧海青天；冬有睡眠，秋有暗香无边；故事有流年，我们的未来还长远 ✘ 1.一起手牵手压马路 👫 ✘ 2. 💌 ✘ 3. 💬 ✘ 4. 🏫 ✘ 5. 🖊️ ✘ 6. 🍽️ ✘ 7.一起看电影 🎦 ✘ 8.一起去图书馆 🏬 ✘ 9.一起去鬼屋 👻 ✘ 10.一起看星星 ⭐ ✘ 11.一起去看海 🌊 ✘ 12.一起去游泳 🏊 ✘ 13. 🏢 ✘ 14. 🏙️ ✘ 15. 🌆 ✘ 16. 🏔️ ✘ 17. 🗼 ✘ 16.一起去一次西藏 🏔️ ✘ 19.一起过生日 🎂 ✘ 20.一起过恋爱纪念日 💕 ✘ 21.一起过七夕 💘 ✘ 22.一起过情人节 💑 ✘ 23.一起喝醉 🥂 ✘ 24.一起堆雪人 ☃️ ✘ 25.一起看烟火 🎆 ✘ 26.一起去蹦极 🧗 ✘ 27.一起去滑冰 ⛸ ✘ 28.一起放风筝 🚶 ✘ 29.一起去划船 🚣 ✘ 30.一起坐热气球 🎈 ✘ 31.一起坐摩天轮 🎡 ✘ 32.给对方化妆 💄 ✘ 33.一起锻炼身体 🏃 ✘ 34.一起穿情侣装逛街 🏪 ✘ 35.一起看日出日落 🌄 ✘ 36.一起淋雨 🌧️ ✘ 37.一起逛超市 🛒 ✘ 38.一起坐摩托 🏍️ ✘ 39.一起坐公交 🚌 ✘ 40.一起坐火车 🚆 ✘ 41.一起坐地铁 🚇 ✘ 42.一起坐飞机 ✈️ ✘ 43.一起坐轮船 🚢 ✘ 44.一起种花草 🌱 ✘ 45.去天安门看升国旗 ⛳ ✘ 46.一起听一次演唱会 🎤 ✘ 47.一起去海底世界 🏞️ ✘ 48.一起去动物园 🏝 ✘ 49.一起去看樱花 🌸 ✘ 50.一起去爬山 ⛰️ ✘ 51.沿废旧铁轨散步 🚊 ✘ 52.一起追剧 🎞️ ✘ 53.元宵节一起猜灯谜 🏮 ✘ 54.帮对方吹头发 👩🏻 ✘ 55.一起过次烛光晚餐 🕯️ ✘ 56.一起熬夜通宵跨年 🎇 ✔ 57.一起聊天到凌晨 💬 ✘ 58.一起用情侣手机壳 📱 ✘ 59.挂一次爱情锁 🔒 ✘ 60.一起荡秋千 🤾 ✘ 61.一起吃火锅 🥘 ✘ 62.一起听同一首歌 🎵 ✘ 63.拍一次情侣写真 💑 ✘ 64.为对方买衣服 👗 ✘ 65.拥抱对方 🤗 ✘ 66.互穿对方的衣服 👖 ✘ 67.喝交杯酒 🥂 ✘ 68.靠对方肩膀睡觉 😴 ✘ 69.朋友面前介绍对方 👋 ✘ 70.一起放孔明灯 🏮 ✘ 71.去对方的老家 🏡 ✘ 72.一起看以前的照片 📷 ✘ 73.给对方起专属绰号 📛 ✘ 74.把照片放进钱包 👛 ✘ 75.一起吃同一碗泡面 🍜 ✘ 76.一起做一次陶艺 👐 ✘ 77.一起包饺子 🥟 ✘ 78.看一场恐怖片 😱 ✘ 79.为对方按摩一次 💆 ✘ 80.一起骑行车 🚴 ✘ 81.一起过周末 ❤️ ✘ 82.一起自驾游 🚗 ✘ 83.一起去对方的学校 🏫 ✘ 84.一起泡温泉 ♨️ ✘ 85.一起去一次教堂 ⛪ ✘ 86.一起做一次饭 🍳 ✘ 87.一起打扫卫生 ✨ ✘ 88.见证朋友的婚礼 💒 ✘ 89.一起去见父母 👪 ✘ 90.一起挑选戒指 💍 ✘ 91.一起挑选婚纱 👰 ✘ 92.和对方结婚 💒 ✘ 93.一起逛街买菜 🛍️ ✘ 94.为小家添置东西 🛋️ ✘ 95.接送对方上下班 🚗 ✘ 96.一起为宝宝取名字 👼 ✘ 97.一起购买婴儿用品 🍼 ✘ 98.一起接送孩子上学 👪 ✘ 99.一起跳一次广场舞 💃 ✘ 100.白头偕老 👫 var binft = function (r) { function t() { return b[Math.floor(Math.random() * b.length)] } function e() { return String.fromCharCode(94 * Math.random() + 33) } function n(r) { for (var n = document.createDocumentFragment(), i = 0; r > i; i++) { var l = document.createElement(\"span\"); l.textContent = e(), l.style.color = t(), n.appendChild(l) } return n } function i() { var t = o[c.skillI]; c.step ? c.step-- : (c.step = g, c.prefixP < l.length ? (c.prefixP >= 0 && (c.text += l[c.prefixP]), c.prefixP++) : \"forward\" === c.direction ? c.skillP < t.length ? (c.text += t[c.skillP], c.skillP++) : c.delay ? c.delay-- : (c.direction = \"backward\", c.delay = a) : c.skillP > 0 ? (c.text = c.text.slice(0, -1), c.skillP--) : (c.skillI = (c.skillI + 1) % o.length, c.direction = \"forward\")), r.textContent = c.text, r.appendChild(n(c.prefixP < l.length ? Math.min(s, s + c.prefixP) : Math.min(s, t.length - c.skillP))), setTimeout(i, d) } var l = \"\", o = [\"关关雎鸠，在河之洲。窈窕淑女，君子好逑。\",\"参差荇菜，左右流之。窈窕淑女，寤寐求之。\",\"求之不得，寤寐思服。悠哉悠哉，辗转反侧。\",\"参差荇菜，左右采之。窈窕淑女，琴瑟友之。\",\"参差荇菜，左右芼之。窈窕淑女，钟鼓乐之。\"].map(function (r) { return r + \"\" }), a = 2, g = 1, s = 5, d = 75, b = [\"rgb(110,64,170)\", \"rgb(150,61,179)\", \"rgb(191,60,175)\", \"rgb(228,65,157)\", \"rgb(254,75,131)\", \"rgb(255,94,99)\", \"rgb(255,120,71)\", \"rgb(251,150,51)\", \"rgb(226,183,47)\", \"rgb(198,214,60)\", \"rgb(175,240,91)\", \"rgb(127,246,88)\", \"rgb(82,246,103)\", \"rgb(48,239,130)\", \"rgb(29,223,163)\", \"rgb(26,199,194)\", \"rgb(35,171,216)\", \"rgb(54,140,225)\", \"rgb(76,110,219)\", \"rgb(96,84,200)\"], c = { text: \"\", prefixP: -s, skillI: 0, skillP: 0, direction: \"forward\", delay: a, step: g }; i() }; binft(document.getElementById('binft')); 推荐使用1920*1080分辨率、谷歌或者火狐浏览器浏览此页😘 Copyright ©2022 LOVE999❤️纪实小屋.All rights reserved. L2Dwidget.init({\"pluginRootPath\":\"live2dw/\",\"pluginJsPath\":\"lib/\",\"pluginModelPath\":\"assets/\",\"tagMode\":false,\"debug\":false,\"model\":{\"jsonPath\":\"/live2dw/assets/koharu.model.json\"},\"display\":{\"position\":\"left\",\"width\":150,\"height\":300},\"mobile\":{\"show\":true},\"react\":{\"opacity\":0.7},\"log\":false});"},{"title":"","date":"2022-04-08T03:58:15.894Z","updated":"2022-04-08T03:58:15.894Z","comments":true,"path":"loveyou/index.html","permalink":"/loveyou/index.html","excerpt":"","text":"久久玖❤️小屋 html { height: 100%; } body { font-family: \"Helvetica Neue\", \"Luxi Sans\", \"DejaVu Sans\", Tahoma, \"Hiragino Sans GB\", \"Microsoft Yahei\", sans-serif; background: #79a8ae; color: #CFEBE4; font-size: 18px; line-height: 2; letter-spacing: 1.2px; margin: 0; } a { color: #ebf7f4; } .body--ready { background: -webkit-linear-gradient(top, rgb(203, 235, 219) 0%, rgb(55, 148, 192) 120%); background: -moz-linear-gradient(top, rgb(203, 235, 219) 0%, rgb(55, 148, 192) 120%); background: -o-linear-gradient(top, rgb(203, 235, 219) 0%, rgb(55, 148, 192) 120%); background: -ms-linear-gradient(top, rgb(203, 235, 219) 0%, rgb(55, 148, 192) 120%); background: linear-gradient(top, rgb(203, 235, 219) 0%, rgb(55, 148, 192) 120%); } .text { position: fixed; bottom: 100px; text-align: center; width: 100%; } .canvas { margin: 0 auto; display: block; } img#logo { width: 128px; background-size: cover; border-radius: 200px; box-shadow: 0px 0px 40px rgba(63, 81, 181, 0.72); border: 3px solid #00a0ff; opacity: 1; margin: 0 auto; margin-top: 20px; margin-bottom: 20px; transition: all 1.0s; } #logo:hover { box-shadow: 0 0 10px #fff; -webkit-box-shadow: 0 0 19px #fff; transform: rotate(360deg); -ms-transform: rotate(360deg); /* IE 9 */ -moz-transform: rotate(360deg); /* Firefox */ -webkit-transform: rotate(360deg); /* Safari 和 Chrome */ -o-transform: rotate(360deg); /* Opera */ filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3); } .cs { width: 100%; height: 100%; margin: 0 auto; position: absolute; text-align: center; } .text { position: fixed; bottom: 20px; text-align: center; width: 100%; font-weight: bold; } .text-right { position: fixed; bottom: 50px; text-align: right; width: 100%; font-weight: bold; } 我们已经相爱了 推荐使用1920*1080分辨率、谷歌或者火狐浏览器浏览此页😘 function show_date_time() { window.setTimeout(\"show_date_time()\", 1000); BirthDay = new Date(\"03/23/2022 02:23:30\"); today = new Date(); timeold = (today.getTime() - BirthDay.getTime()); sectimeold = timeold / 1000 secondsold = Math.floor(sectimeold); msPerDay = 24 * 60 * 60 * 1000 e_daysold = timeold / msPerDay daysold = Math.floor(e_daysold); e_hrsold = (e_daysold - daysold) * 24; hrsold = Math.floor(e_hrsold); e_minsold = (e_hrsold - hrsold) * 60; minsold = Math.floor((e_hrsold - hrsold) * 60); seconds = Math.floor((e_minsold - minsold) * 60); span_dt_dt.innerHTML = daysold + \" 天 \" + hrsold + \" 小时 \" + minsold + \" 分 \" + seconds + \" 秒 \"; } show_date_time(); var S = { init: function () { S.Drawing.init('.canvas'); document.body.classList.add('body--ready'); S.UI.simulate(\"蕾宝❤️|我愿意陪你|青丝到白发|沧海到桑田|天涯到海角|天荒到地老|一直到永远|#countdown 3|I love you！❤️|#time\"); S.Drawing.loop(function () { S.Shape.render(); }); } }; S.Drawing = (function () { var canvas, context, renderFn, requestFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) { window.setTimeout(callback, 1000 / 60); }; return { init: function (el) { canvas = document.querySelector(el); context = canvas.getContext('2d'); this.adjustCanvas(); window.addEventListener('resize', function (e) { S.Drawing.adjustCanvas(); }); }, loop: function (fn) { renderFn = !renderFn ? fn : renderFn; this.clearFrame(); renderFn(); requestFrame.call(window, this.loop.bind(this)); }, adjustCanvas: function () { canvas.width = window.innerWidth - 100; canvas.height = window.innerHeight - 30; }, clearFrame: function () { context.clearRect(0, 0, canvas.width, canvas.height); }, getArea: function () { return {w: canvas.width, h: canvas.height}; }, drawCircle: function (p, c) { context.fillStyle = c.render(); context.beginPath(); context.arc(p.x, p.y, p.z, 0, 2 * Math.PI, true); context.closePath(); context.fill(); } }; }()); S.UI = (function () { var interval, currentAction, time, maxShapeSize = 30, sequence = [], cmd = '#'; function formatTime(date) { var h = date.getHours(), m = date.getMinutes(), m = m < 10 ? '0' + m : m; return h + ':' + m; } function getValue(value) { return value && value.split(' ')[1]; } function getAction(value) { value = value && value.split(' ')[0]; return value && value[0] === cmd && value.substring(1); } function timedAction(fn, delay, max, reverse) { clearInterval(interval); currentAction = reverse ? max : 1; fn(currentAction); if (!max || (!reverse && currentAction < max) || (reverse && currentAction > 0)) { interval = setInterval(function () { currentAction = reverse ? currentAction - 1 : currentAction + 1; fn(currentAction); if ((!reverse && max && currentAction === max) || (reverse && currentAction === 0)) { clearInterval(interval); } }, delay); } } function performAction(value) { var action, value, current; sequence = typeof (value) === 'object' ? value : sequence.concat(value.split('|')); timedAction(function (index) { current = sequence.shift(); action = getAction(current); value = getValue(current); switch (action) { case 'countdown': value = parseInt(value) || 10; value = value > 0 ? value : 10; timedAction(function (index) { if (index === 0) { if (sequence.length === 0) { S.Shape.switchShape(S.ShapeBuilder.letter('')); } else { performAction(sequence); } } else { S.Shape.switchShape(S.ShapeBuilder.letter(index), true); } }, 1000, value, true); break; case 'rectangle': value = value && value.split('x'); value = (value && value.length === 2) ? value : [maxShapeSize, maxShapeSize / 2]; S.Shape.switchShape(S.ShapeBuilder.rectangle(Math.min(maxShapeSize, parseInt(value[0])), Math.min(maxShapeSize, parseInt(value[1])))); break; case 'circle': value = parseInt(value) || maxShapeSize; value = Math.min(value, maxShapeSize); S.Shape.switchShape(S.ShapeBuilder.circle(value)); break; case 'time': var t = formatTime(new Date()); if (sequence.length > 0) { S.Shape.switchShape(S.ShapeBuilder.letter(t)); } else { timedAction(function () { t = formatTime(new Date()); if (t !== time) { time = t; S.Shape.switchShape(S.ShapeBuilder.letter(time)); } }, 1000); } break; default: S.Shape.switchShape(S.ShapeBuilder.letter(current[0] === cmd ? 'HacPai' : current)); } }, 2000, sequence.length); } return { simulate: function (action) { performAction(action); } }; }()); S.Point = function (args) { this.x = args.x; this.y = args.y; this.z = args.z; this.a = args.a; this.h = args.h; }; S.Color = function (r, g, b, a) { this.r = r; this.g = g; this.b = b; this.a = a; }; S.Color.prototype = { render: function () { return 'rgba(' + this.r + ',' + +this.g + ',' + this.b + ',' + this.a + ')'; } }; S.Dot = function (x, y) { this.p = new S.Point({ x: x, y: y, z: 5, a: 1, h: 0 }); this.e = 0.07; this.s = true; this.c = new S.Color(255, 255, 255, this.p.a); this.t = this.clone(); this.q = []; }; S.Dot.prototype = { clone: function () { return new S.Point({ x: this.x, y: this.y, z: this.z, a: this.a, h: this.h }); }, _draw: function () { this.c.a = this.p.a; S.Drawing.drawCircle(this.p, this.c); }, _moveTowards: function (n) { var details = this.distanceTo(n, true), dx = details[0], dy = details[1], d = details[2], e = this.e * d; if (this.p.h === -1) { this.p.x = n.x; this.p.y = n.y; return true; } if (d > 1) { this.p.x -= ((dx / d) * e); this.p.y -= ((dy / d) * e); } else { if (this.p.h > 0) { this.p.h--; } else { return true; } } return false; }, _update: function () { if (this._moveTowards(this.t)) { var p = this.q.shift(); if (p) { this.t.x = p.x || this.p.x; this.t.y = p.y || this.p.y; this.t.z = p.z || this.p.z; this.t.a = p.a || this.p.a; this.p.h = p.h || 0; } else { if (this.s) { this.p.x -= Math.sin(Math.random() * 3.142); this.p.y -= Math.sin(Math.random() * 3.142); } else { this.move(new S.Point({ x: this.p.x + (Math.random() * 50) - 25, y: this.p.y + (Math.random() * 50) - 25 })); } } } d = this.p.a - this.t.a; this.p.a = Math.max(0.1, this.p.a - (d * 0.05)); d = this.p.z - this.t.z; this.p.z = Math.max(1, this.p.z - (d * 0.05)); }, distanceTo: function (n, details) { var dx = this.p.x - n.x, dy = this.p.y - n.y, d = Math.sqrt(dx * dx + dy * dy); return details ? [dx, dy, d] : d; }, move: function (p, avoidStatic) { if (!avoidStatic || (avoidStatic && this.distanceTo(p) > 1)) { this.q.push(p); } }, render: function () { this._update(); this._draw(); } }; S.ShapeBuilder = (function () { var gap = 13, shapeCanvas = document.createElement('canvas'), shapeContext = shapeCanvas.getContext('2d'), fontSize = 500, fontFamily = 'Avenir, Helvetica Neue, Helvetica, Arial, sans-serif'; function fit() { shapeCanvas.width = Math.floor(window.innerWidth / gap) * gap; shapeCanvas.height = Math.floor(window.innerHeight / gap) * gap; shapeContext.fillStyle = 'red'; shapeContext.textBaseline = 'middle'; shapeContext.textAlign = 'center'; } function processCanvas() { var pixels = shapeContext.getImageData(0, 0, shapeCanvas.width, shapeCanvas.height).data; dots = [], pixels, x = 0, y = 0, fx = shapeCanvas.width, fy = shapeCanvas.height, w = 0, h = 0; for (var p = 0; p < pixels.length; p += (4 * gap)) { if (pixels[p + 3] > 0) { dots.push(new S.Point({ x: x, y: y })); w = x > w ? x : w; h = y > h ? y : h; fx = x < fx ? x : fx; fy = y < fy ? y : fy; } x += gap; if (x >= shapeCanvas.width) { x = 0; y += gap; p += gap * 4 * shapeCanvas.width; } } return {dots: dots, w: w + fx, h: h + fy}; } function setFontSize(s) { shapeContext.font = 'bold ' + s + 'px ' + fontFamily; } function isNumber(n) { return !isNaN(parseFloat(n)) && isFinite(n); } function init() { fit(); window.addEventListener('resize', fit); } // Init init(); return { imageFile: function (url, callback) { var image = new Image(), a = S.Drawing.getArea(); image.onload = function () { shapeContext.clearRect(0, 0, shapeCanvas.width, shapeCanvas.height); shapeContext.drawImage(this, 0, 0, a.h * 0.6, a.h * 0.6); callback(processCanvas()); }; image.onerror = function () { callback(S.ShapeBuilder.letter('What?')); }; image.src = url; }, circle: function (d) { var r = Math.max(0, d) / 2; shapeContext.clearRect(0, 0, shapeCanvas.width, shapeCanvas.height); shapeContext.beginPath(); shapeContext.arc(r * gap, r * gap, r * gap, 0, 2 * Math.PI, false); shapeContext.fill(); shapeContext.closePath(); return processCanvas(); }, letter: function (l) { var s = 0; setFontSize(fontSize); s = Math.min(fontSize, (shapeCanvas.width / shapeContext.measureText(l).width) * 0.8 * fontSize, (shapeCanvas.height / fontSize) * (isNumber(l) ? 1 : 0.45) * fontSize); setFontSize(s); shapeContext.clearRect(0, 0, shapeCanvas.width, shapeCanvas.height); shapeContext.fillText(l, shapeCanvas.width / 2, shapeCanvas.height / 2); return processCanvas(); }, rectangle: function (w, h) { var dots = [], width = gap * w, height = gap * h; for (var y = 0; y < height; y += gap) { for (var x = 0; x < width; x += gap) { dots.push(new S.Point({ x: x, y: y })); } } return {dots: dots, w: width, h: height}; } }; }()); S.Shape = (function () { var dots = [], width = 0, height = 0, cx = 0, cy = 0; function compensate() { var a = S.Drawing.getArea(); cx = a.w / 2 - width / 2; cy = a.h / 2 - height / 2; } return { shuffleIdle: function () { var a = S.Drawing.getArea(); for (var d = 0; d < dots.length; d++) { if (!dots[d].s) { dots[d].move({ x: Math.random() * a.w, y: Math.random() * a.h }); } } }, switchShape: function (n, fast) { var size, a = S.Drawing.getArea(); width = n.w; height = n.h; compensate(); if (n.dots.length > dots.length) { size = n.dots.length - dots.length; for (var d = 1; d 0) { i = Math.floor(Math.random() * n.dots.length); dots[d].e = fast ? 0.25 : (dots[d].s ? 0.14 : 0.11); if (dots[d].s) { dots[d].move(new S.Point({ z: Math.random() * 20 + 10, a: Math.random(), h: 18 })); } else { dots[d].move(new S.Point({ z: Math.random() * 5 + 5, h: fast ? 18 : 30 })); } dots[d].s = true; dots[d].move(new S.Point({ x: n.dots[i].x + cx, y: n.dots[i].y + cy, a: 1, z: 5, h: 0 })); n.dots = n.dots.slice(0, i).concat(n.dots.slice(i + 1)); d++; } for (var i = d; i < dots.length; i++) { if (dots[i].s) { dots[i].move(new S.Point({ z: Math.random() * 20 + 10, a: Math.random(), h: 20 })); dots[i].s = false; dots[i].e = 0.04; dots[i].move(new S.Point({ x: Math.random() * a.w, y: Math.random() * a.h, a: 0.3, //.4 z: Math.random() * 4, h: 0 })); } } }, render: function () { for (var d = 0; d < dots.length; d++) { dots[d].render(); } } }; }()); S.init(); L2Dwidget.init({\"pluginRootPath\":\"live2dw/\",\"pluginJsPath\":\"lib/\",\"pluginModelPath\":\"assets/\",\"tagMode\":false,\"debug\":false,\"model\":{\"jsonPath\":\"/live2dw/assets/koharu.model.json\"},\"display\":{\"position\":\"left\",\"width\":150,\"height\":300},\"mobile\":{\"show\":true},\"react\":{\"opacity\":0.7},\"log\":false});"},{"title":"theme-sakura","date":"2019-01-04T14:53:25.000Z","updated":"2022-04-07T11:28:05.622Z","comments":false,"path":"theme-sakura/index.html","permalink":"/theme-sakura/index.html","excerpt":"","text":"Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro","keywords":"Hexo 主题 Sakura 🌸"}],"posts":[{"title":"久久玖❤️小屋","slug":"first","date":"2022-03-30T15:16:01.000Z","updated":"2022-04-08T13:36:26.416Z","comments":true,"path":"2022/03/30/first/","link":"","permalink":"/2022/03/30/first/","excerpt":"","text":"2022-03-30 23:16:01 蕾蕾明天早上直播间开播，蕾宝去睡觉了，之前看到好多情侣博客，我突然萌生了我也建一个，记录一下我和蕾宝的生活和爱情。久久玖❤️小屋就这样诞生了。为什么叫久久玖，我这取名鬼才，当然不可能取出这样的啦，啥含义，请问蕾宝。 2022-03-04 08时，相识于泉宝宝和蕾蕾打招呼，小蕾蕾一句你多大呀，睡眼朦胧状态下就这么相识了。 2022-03-05 第一次看到小蕾蕾照片，在一片花海前的自拍照，结果蕾宝说，我看了一张最丑的。让我看朋友圈还带时限的，三分钟宝宝心里苦呀。 2022-03-7 第一次和蕾宝 玩游戏，两个都在说自己菜鸡。 2022-03-13 小蕾蕾第一次给发了三秒钟的自拍视频，我在森林公园看桃花，蕾蕾去寺庙的路上，拍的视频。 2022-03-23 02:23 确定关系，未来老公，啥时候能报前面那两个字去掉呀，期待中。 2022-03-23 20:45 第一次说想我，第一次听他说暧昧的话，蕾宝和攀攀鹏鹏出去喝酒，说是大冒险输了，给我打语音说想我了，我那毫无波动的内心，被她这颗石子，溅起了波澜。 2022-03-25 第一次视频，小蕾蕾直播间的电脑网络出问题了，突然发来视频，我没带耳机的我，害羞的不行不行的，一通瞎逼操作，结果还没帮上什么忙，尴尬，哈哈哈","categories":[{"name":"久久玖❤️小屋","slug":"久久玖❤️小屋","permalink":"/categories/久久玖❤️小屋/"}],"tags":[{"name":"久久玖❤️小屋","slug":"久久玖❤️小屋","permalink":"/tags/久久玖❤️小屋/"},{"name":"恋爱小事记","slug":"恋爱小事记","permalink":"/tags/恋爱小事记/"}],"keywords":[{"name":"久久玖❤️小屋","slug":"久久玖❤️小屋","permalink":"/categories/久久玖❤️小屋/"}]}]}